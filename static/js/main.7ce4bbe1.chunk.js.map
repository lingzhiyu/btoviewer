{"version":3,"sources":["components/Map/Layers/BusLayer.js","components/Map/Layers/SchoolLayer.js","components/Map/Layers/HawkerLayer.js","components/Map/Layers/BTOSectorLayer.js","components/Card/Card.js","components/Map/Alert/Alert.js","components/Map/MapAgain.js","components/NavCol/CheckBoxes/CheckBoxes.js","components/TimeSeries/TimeSeries_3room.js","components/TimeSeries/TimeSeries_4room.js","components/Modals/ModalGraph.js","components/NavBar/NavBar.js","components/Modals/List/List.js","components/Modals/ModalOnStart.js","App.js","registerServiceWorker.js","index.js"],"names":["BusLayer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setVisibility","isHidden","layer","hide","show","openTooltip","featureEvent","handleMarker","data","latitude","longitude","name","hidden","style","cartoSource","carto","source","SQL","cartoStyle","CartoCSS","Layer","featureOverColumns","client","addLayer","getLeafletLayer","addTo","context","map","on","nextProps","_this2","_this$props","getStyle","setContent","then","Component","contextTypes","PropTypes","object","SchoolLayer","school_name","HawkerLayer","state","position","parseFloat","layerStyle","console","log","BTOLayer","featureClickColumns","southWest","bottom_left_lat","bottom_left_long","northEast","top_right_lat","top_right_long","onClick","_this3","DISTANCE_YW","DISTANCE_YE","Carda","busDataset","busDataview","dataview","Category","limit","operation","MIN","operationColumn","hawkerDataSet","hawkerDataview","schoolDataSet","Dataset","schoolDataview","featureTitle","mapRef","busInner","hawkerInner","schoolInner","categories","reverse","slice","category","concat","value","toFixed","join","document","querySelector","innerHTML","bboxFilter","filter","BoundingBoxLeaflet","addDataview","addFilter","featureOnFocus","setOperationColumn","react_default","a","createElement","className","reactstrap_es","animated","React","AlertExample","visible","onDismiss","bind","assertThisInitialized","setState","color","isOpen","toggle","Client","apiKey","username","bounds","boundsYE","boundsYW","boundsPunggol","MainMap","center","zoom","maxBounds","maxZoom","minZoom","markerPosition","markerContent","handlePan","btoBounds","flyToBounds","content","refs","leafletElement","shouldReset","resetClosure","shouldMoveToYishunEast","moveToYishunEastClosure","shouldMoveToYishunWest","moveToYishunWestClosure","shouldMoveToPunggol","moveToPunggolClosure","_this$state","Map","ref","id","animate","Card_Carda","cardTitle","cardText","TileLayer","url","Marker","draggable","Tooltip","Layers_BusLayer","busStopHidden","Layers_SchoolLayer","schoolHidden","Layers_HawkerLayer","hawkerHidden","BTOSectorLayer","Alert_AlertExample","CheckBoxes","cSelected","onCheckboxBtnClick","selected","index","indexOf","push","splice","toConsumableArray","toggleHawkerHidden","toggleBusHidden","toggleSchoolHidden","size","active","includes","randomColor","require","TimeSeries_3room","es6","width","height","margin","top","right","left","bottom","dataKey","type","allowDuplicatedCategory","domain","label","angle","offset","strokeDasharray","verticalAlign","HDB_prices","s","key","financial_year","stroke","TimeSeries_4room","ModalGraph","modal","buttonLabel","zIndex","components_TimeSeries_TimeSeries_3room","components_TimeSeries_TimeSeries_4room","NavBar","isStart","light","expand","href","navbar","NavCol_CheckBoxes_CheckBoxes","Modals_ModalGraph","moveToPunggol","moveToYishunWest","moveToYishunEast","Example","ModalExample","List_Example","App","moveToYishunEastHandler","moveToYishunWestHandler","moveToPunggolHandler","resetHandler","toggleBusStopHidden","btoHidden","shoppingHidden","NavBar_NavBar","MapAgain","ModalOnStart","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","App_App","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7ce4bbe1.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport carto from '@carto/carto.js';\r\n\r\nclass BusLayer extends Component {\r\n  static contextTypes = {\r\n    map: PropTypes.object,\r\n  };\r\n\r\n  static propTypes = {\r\n    source: PropTypes.string,\r\n    style: PropTypes.string,\r\n    client: PropTypes.object,\r\n    hidden: PropTypes.bool\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { hidden, style } = props;\r\n    const SQLquery = 'SELECT * FROM busstop_most_updated_1';\r\n    const cartoSource = new carto.source.SQL(SQLquery);\r\n    const cartoStyle = new carto.style.CartoCSS(style);\r\n\r\n    this.layer = new carto.layer.Layer(cartoSource, cartoStyle, {\r\n      featureOverColumns: ['name', 'latitude', 'longitude']\r\n    });\r\n    this.setVisibility(hidden)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { client } = this.props;\r\n    client.addLayer(this.layer);\r\n    client.getLeafletLayer().addTo(this.context.map);\r\n\r\n    // Adds the Tooltip functionality\r\n    this.layer.on('featureOver', this.openTooltip);\r\n  }\r\n\r\n  // Optimisation of updates, not required for functionality\r\n  shouldComponentUpdate(nextProps) {\r\n    return nextProps.style !== this.props.style || nextProps.hidden !== this.props.hidden;\r\n  }\r\n\r\n  // Hides the layer when called in render()\r\n  setVisibility = isHidden => {\r\n    isHidden ? this.layer.hide() : this.layer.show();\r\n  }\r\n\r\n  //Function that adds the Tooltip functionality\r\n  openTooltip = (featureEvent) => {\r\n    this.props.handleMarker([featureEvent.data.latitude,\r\n        featureEvent.data.longitude],\r\n        featureEvent.data.name);\r\n  }\r\n\r\n  render() {\r\n    const { hidden, style } = this.props;\r\n\r\n    if (hidden) {\r\n      this.layer.hide();\r\n    } else {\r\n      this.layer.show();\r\n    }\r\n\r\n    const layerStyle = this.layer.getStyle();\r\n\r\n    layerStyle.setContent(style).then(() => this.setVisibility(hidden));\r\n\r\n    return null;\r\n    // need to make a React.forwardRef(containing a component with a props.ref)\r\n  }\r\n}\r\n\r\nexport default BusLayer;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport carto from '@carto/carto.js';\r\n\r\nclass SchoolLayer extends Component {\r\n  static contextTypes = {\r\n    map: PropTypes.object,\r\n  };\r\n\r\n  static propTypes = {\r\n    style: PropTypes.string,\r\n    client: PropTypes.object,\r\n    hidden: PropTypes.bool\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Change the source, to a customised one\r\n    const { hidden, style } = props;\r\n    const SQLsource = `SELECT * FROM school_data_most_updated`;\r\n\r\n    const cartoSource = new carto.source.SQL(SQLsource);\r\n    const cartoStyle = new carto.style.CartoCSS(style);\r\n\r\n    this.layer = new carto.layer.Layer(cartoSource, cartoStyle, {\r\n      featureOverColumns: ['school_name', 'longitude', 'latitude']\r\n    });\r\n    this.setVisibility(hidden)\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { client } = this.props;\r\n    client.addLayer(this.layer);\r\n    client.getLeafletLayer().addTo(this.context.map);\r\n\r\n    this.layer.on('featureOver', this.openTooltip);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return nextProps.style !== this.props.style || nextProps.hidden !== this.props.hidden;\r\n  }\r\n\r\n  setVisibility = isHidden => {\r\n    isHidden ? this.layer.hide() : this.layer.show();\r\n  }\r\n\r\n  //Function that adds the Tooltip functionality\r\n  openTooltip = (featureEvent) => {\r\n    this.props.handleMarker([featureEvent.data.latitude,\r\n        featureEvent.data.longitude],\r\n        featureEvent.data.school_name);\r\n  }\r\n\r\n  render() {\r\n    const { hidden, style } = this.props;\r\n    \r\n    if (hidden) {\r\n      this.layer.hide();\r\n    } else {\r\n      this.layer.show();\r\n    }\r\n    \r\n    const layerStyle = this.layer.getStyle();\r\n    layerStyle.setContent(style).then(() => this.setVisibility(hidden));\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default SchoolLayer;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport carto from '@carto/carto.js';\r\n\r\nclass HawkerLayer extends Component {\r\n\r\n  state = {\r\n    position: [1.2462530584216953,103.17157000878907]\r\n  }\r\n\r\n  /* \r\n   * Some type-checking, using PropTypes modules \r\n   */\r\n  static contextTypes = {\r\n    map: PropTypes.object,\r\n  };\r\n\r\n  static propTypes = {\r\n    handleMarker: PropTypes.func,\r\n    style: PropTypes.string,\r\n    client: PropTypes.object,\r\n    hidden: PropTypes.bool\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Changed the source, to a customised one\r\n    // Necessary lines to initialise a Carto.Layer object, using the client\r\n    const { hidden, style } = props;\r\n    const SQLsource = `SELECT * FROM hawker_centres`; \r\n\r\n    const cartoSource = new carto.source.SQL(SQLsource);\r\n    const cartoStyle = new carto.style.CartoCSS(style);\r\n\r\n    this.layer = new carto.layer.Layer(cartoSource, cartoStyle, {\r\n        featureOverColumns: ['name', 'latitude', 'longitude']\r\n    });\r\n    this.setVisibility(hidden)\r\n  }\r\n\r\n  /*\r\n   * Takes in the featureEvent, whose properities are defined by featureOverColumns\r\n   * Uses the handlerMarker that was passed as a props from Map.js \r\n   */\r\n  openTooltip = (featureEvent) => {\r\n    this.props.handleMarker([parseFloat(featureEvent.data.latitude),\r\n        parseFloat(featureEvent.data.longitude)],\r\n        featureEvent.data.name);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { client } = this.props;\r\n    client.addLayer(this.layer);\r\n    client.getLeafletLayer().addTo(this.context.map);\r\n\r\n    // Add carto hoverOver & hoverOut functions as second argument\r\n    this.layer.on('featureOver', this.openTooltip);\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    return nextProps.style !== this.props.style || nextProps.hidden !== this.props.hidden;\r\n  }\r\n\r\n  // Sets the visibility of the layers \r\n  setVisibility = isHidden => {\r\n    isHidden ? this.layer.hide() : this.layer.show();\r\n  }\r\n\r\n  render() {\r\n    const { hidden, style } = this.props;\r\n    const layerStyle = this.layer.getStyle();\r\n\r\n    if (hidden) {\r\n      console.log(\"in hawker layer\");\r\n      this.layer.hide();\r\n    } else {\r\n      this.layer.show();\r\n    }\r\n\r\n    layerStyle.setContent(style).then(() => this.setVisibility(hidden));\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default HawkerLayer;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport carto from '@carto/carto.js'; \r\n\r\nclass BTOLayer extends Component {\r\n  state = {\r\n    hidden: null\r\n  }\r\n\r\n  static contextTypes = {\r\n    map: PropTypes.object,\r\n  };\r\n\r\n  static propTypes = {\r\n    source: PropTypes.string,\r\n    client: PropTypes.object,\r\n    hidden: PropTypes.bool\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { hidden, style } = props;\r\n    const SQLquery = 'SELECT * FROM current_bto_sectors_1';\r\n\r\n    const cartoSource = new carto.source.SQL(SQLquery);\r\n    const cartoStyle = new carto.style.CartoCSS(style);\r\n\r\n    // need to input the bounds in the BTO layer dataset\r\n    this.layer = new carto.layer.Layer(cartoSource, cartoStyle, {\r\n      featureClickColumns: ['name', 'top_right_lat', 'top_right_long',\r\n           'bottom_left_lat', 'bottom_left_long', 'latitude', 'longitude']\r\n    });\r\n    this.setVisibility(hidden);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { client } = this.props;\r\n    client.addLayer(this.layer);\r\n    client.getLeafletLayer().addTo(this.context.map);\r\n\r\n    this.layer.on('featureOver', this.openTooltip);\r\n    this.layer.on('featureClicked', featureEvent => {\r\n      const southWest = [featureEvent.data.bottom_left_lat, featureEvent.data.bottom_left_long];\r\n      const northEast = [featureEvent.data.top_right_lat, featureEvent.data.top_right_long];\r\n      // [lat,long], increase lat goes up; increase long, goes right\r\n      this.props.onClick([southWest, northEast]);\r\n    });\r\n  }\r\n\r\n  // Functionality that shows the tooltip for this feature.\r\n  openTooltip = (featureEvent) => {\r\n    this.props.handleMarker([featureEvent.data.latitude,\r\n        featureEvent.data.longitude],\r\n        featureEvent.data.name);\r\n  }\r\n\r\n  // Optimisation of updates, not required for functionality\r\n  shouldComponentUpdate(nextProps) {\r\n    return nextProps.style !== this.props.style || nextProps.hidden !== this.props.hidden;\r\n  }\r\n\r\n  // Hides the layer when called in render()\r\n  setVisibility = isHidden => {\r\n    isHidden ? this.layer.hide() : this.layer.show();\r\n  }\r\n\r\n  render() {\r\n    const { hidden, style } = this.props;\r\n    const layerStyle = this.layer.getStyle();\r\n    layerStyle.setContent(style).then(() => this.setVisibility(hidden));\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default BTOLayer;","import React from 'react';\r\nimport { Card, CardText, CardBody, Progress } from 'reactstrap';\r\nimport './Card.css';\r\nimport carto from '@carto/carto.js';\r\n\r\nconst DISTANCE_PUNGGOL = 'distance_to_punggol';\r\nconst DISTANCE_YW = 'distance_to_yishun_west';\r\nconst DISTANCE_YE = 'distance_to_yishun_east';\r\n\r\n\r\nexport default class Carda extends React.Component {\r\n    constructor(props) {\r\n        super(props);        \r\n        this.busDataset = new carto.source.SQL('SELECT * FROM busstop_most_updated_1_copy');\r\n        this.busDataview = new carto.dataview.Category(this.busDataset, 'name', {\r\n                limit: 1000,\r\n                operation: carto.operation.MIN,\r\n                operationColumn: \"NULL\"\r\n            }\r\n        );\r\n\r\n        this.hawkerDataSet = new carto.source.SQL('SELECT * FROM hawker_centres_copy');\r\n        this.hawkerDataview = new carto.dataview.Category(this.hawkerDataSet, 'name', {\r\n                limit: 500,\r\n                operation: carto.operation.MIN,\r\n                operationColumn: \"NULL\"\r\n            }\r\n        )\r\n\r\n        this.schoolDataSet = new carto.source.Dataset('school_data_most_updated_copy');\r\n        this.schoolDataview = new carto.dataview.Category(this.schoolDataSet, 'school_name', {\r\n                limit: 500,\r\n                operation: carto.operation.MIN,\r\n                operationColumn: \"NULL\"\r\n            }\r\n        )\r\n\r\n        this.featureTitle = \" Nothing \";\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { client, mapRef } = this.props;\r\n\r\n        if (mapRef != null) {\r\n            var busInner, hawkerInner, schoolInner;\r\n\r\n            const busHeading = \"Nearest Bus Stops: \";\r\n            const schoolHeading = \"Nearest Schools: \";\r\n            const hawkerHeading = \"Nearest Hawker Centers: \";\r\n            \r\n            this.busDataview.on('dataChanged', (data) => {\r\n\r\n                busInner = data.categories.reverse().slice(0,3).map(category => \r\n                    `<li>\r\n                        ${category.name} : ${category.value.toFixed(2) + \" meters\"}\r\n                    </li>`\r\n                ).join('');\r\n\r\n                document.querySelector('.cardtext').innerHTML = `   <h3> <strong> ${this.featureTitle} </strong> </h3>\r\n                                                                <ul> \r\n                                                                    <h5> ${busHeading} </h5> \\n \r\n                                                                    ${busInner} \\n\r\n                                                                    <h5> ${hawkerHeading} </h5> \\n \r\n                                                                    ${hawkerInner}\\n \r\n                                                                    <h5> ${schoolHeading} </h5> \\n\r\n                                                                    ${schoolInner}\r\n                                                                    </ul>`;\r\n            });\r\n\r\n            this.hawkerDataview.on('dataChanged', (data) => {\r\n                \r\n                hawkerInner = data.categories.reverse().slice(0,3).map(category => \r\n                    `<li>\r\n                        ${category.name} : ${category.value.toFixed(2) + \" meters\"}\r\n                    </li>`\r\n                ).join('');\r\n                document.querySelector('.cardtext').innerHTML = `   <h3> <strong> ${this.featureTitle} </strong> </h3>\r\n                                                                <ul> \r\n                                                                    <h5> ${busHeading} </h5> \\n \r\n                                                                    ${busInner} \\n\r\n                                                                    <h5> ${hawkerHeading} </h5> \\n \r\n                                                                    ${hawkerInner}\\n \r\n                                                                    <h5> ${schoolHeading} </h5> \\n\r\n                                                                    ${schoolInner}\r\n                                                                    </ul>`;\r\n            });\r\n            \r\n            this.schoolDataview.on('dataChanged', (data) => {\r\n                schoolInner = data.categories.reverse().slice(0,3).map(category => \r\n                    `<li>\r\n                        ${category.name} : ${category.value.toFixed(2) + \" meters\"}\r\n                    </li>`\r\n                ).join('');\r\n                document.querySelector('.cardtext').innerHTML = `   <h3> <strong> ${this.featureTitle} </strong> </h3>\r\n                                                                <ul> \r\n                                                                    <h5> ${busHeading} </h5> \\n \r\n                                                                    ${busInner} \\n\r\n                                                                    <h5> ${hawkerHeading} </h5> \\n \r\n                                                                    ${hawkerInner}\\n \r\n                                                                    <h5> ${schoolHeading} </h5> \\n\r\n                                                                    ${schoolInner}\r\n                                                                    </ul>`;\r\n            });\r\n\r\n\r\n            const bboxFilter = new carto.filter.BoundingBoxLeaflet(mapRef);\r\n\r\n            client.addDataview(this.schoolDataview);\r\n            client.addDataview(this.hawkerDataview);\r\n            client.addDataview(this.busDataview);\r\n\r\n            this.schoolDataview.addFilter(bboxFilter);\r\n            this.hawkerDataview.addFilter(bboxFilter);\r\n            this.busDataview.addFilter(bboxFilter);\r\n        } \r\n    }\r\n\r\n    shouldComponentUpdate() {\r\n        //console.log(\"in card shouldComponentUpdate: this.props.mapRef: \" + this.props.mapRef );\r\n        return true;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        switch(this.props.featureOnFocus) {\r\n            case \"Yishun East\": {\r\n                console.log(\"in card -> switch -> dist to YE\");\r\n                this.featureTitle = \"Amenities near Yishun East\";\r\n                this.busDataview.setOperationColumn(DISTANCE_YE);\r\n                this.hawkerDataview.setOperationColumn(DISTANCE_YE);\r\n                this.schoolDataview.setOperationColumn(DISTANCE_YE);\r\n                break;\r\n            }\r\n\r\n            case \"Yishun West\": {\r\n                console.log(\"in card -> switch -> dist to  YW\");\r\n                this.featureTitle = \"Amenities near Yishun West\";\r\n                this.busDataview.setOperationColumn(DISTANCE_YW);\r\n                this.hawkerDataview.setOperationColumn(DISTANCE_YW);\r\n                this.schoolDataview.setOperationColumn(DISTANCE_YW);\r\n                break;\r\n            }\r\n\r\n            case \"Punggol\": {\r\n                console.log(\"in card -> switch -> dist to punggol\");\r\n                this.featureTitle = \"Amenities near Punggol\";\r\n                this.busDataview.setOperationColumn(DISTANCE_PUNGGOL);\r\n                this.hawkerDataview.setOperationColumn(DISTANCE_PUNGGOL);\r\n                this.schoolDataview.setOperationColumn(DISTANCE_PUNGGOL);\r\n                break;\r\n            }\r\n\r\n            default: \r\n                document.querySelector('.cardtext').innerHTML = `<h5> Select a BTO Sector! </h5>`;\r\n                console.log(\"featureOnFocus is null\");\r\n        }\r\n\r\n        console.log(\"new featureOnFocus will be: \" + this.props.featureOnFocus);\r\n    }\r\n\r\n\r\n    render() {\r\n         return (\r\n            <div className=\"card1\">\r\n            <Card>\r\n                <CardBody>\r\n                {/* <CardTitle>{this.props.cardTitle}</CardTitle> */}\r\n                {/* <CardSubtitle> Insert Card subtitle</CardSubtitle>\r\n                <CardText>  Insert Some quick example text to build on the card title and make up the bulk of the card's content </CardText>\r\n                <CardText> {this.props.cardText} </CardText> */}\r\n                <CardText className=\"cardtext\"> \r\n                    <Progress animated value=\"100\"/>\r\n                    </CardText>\r\n                </CardBody>\r\n            </Card>\r\n            </div>\r\n        ); \r\n    }\r\n} \r\n\r\n","import React from 'react';\r\nimport { Alert } from 'reactstrap';\r\nimport './Alert.css';\r\n\r\nexport default class AlertExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      visible: true\r\n    };\r\n\r\n    this.onDismiss = this.onDismiss.bind(this);\r\n  }\r\n\r\n  onDismiss() {\r\n    this.setState({ visible: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Alert color=\"info\" isOpen={this.state.visible} toggle={this.onDismiss}>\r\n            <b> August 2018 BTO Launch: Punggol, Yishun East, Yishun West </b>\r\n            </Alert>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Map, TileLayer, Tooltip, Marker} from 'react-leaflet';\r\nimport './Map.css';\r\nimport carto from '@carto/carto.js';\r\nimport BusLayer from './Layers/BusLayer';\r\nimport SchoolLayer from './Layers/SchoolLayer';\r\nimport HawkerLayer from './Layers/HawkerLayer';\r\nimport BTOSectorLayer from './Layers/BTOSectorLayer';\r\nimport Card from '../Card/Card';\r\nimport Alert from './Alert/Alert';\r\n\r\nvar CARTO_BASEMAP = 'https://{s}.basemaps.cartocdn.com/rastertiles/voyager/{z}/{x}/{y}.png';\r\n\r\nvar client = new carto.Client({\r\n\tapiKey: 'cefaa4464d8aba5e9a3afff2d22cea54e15990c2',\r\n\tusername: 'wesleynsc'\r\n});\r\n\r\nvar busStyle = `\r\n\t#layer {\r\n\t\tmarker-width: 9;\r\n\t\tmarker-fill: #EE4D5A;\r\n\t\tmarker-line-color: #FFFFFF;\r\n\t}\r\n`;\r\n\r\nvar BTOStyle = `\r\n\t#layer {\r\n\t\tpolygon-fill: rgba(28, 128, 28, 1);\r\n\t\tpolygon-opacity: 0.4;\r\n\t}\r\n`;\r\n\r\n\r\nvar schoolStyle = `\r\n\t#layer {\r\n\t\tmarker-width: 9;\r\n\t\tmarker-fill: #AEDF11;\r\n\t\tmarker-line-color: #FFFFFF;\r\n\t}\r\n`;\r\n\r\nvar hawkerStyle = `\r\n\t#layer {\r\n\t\tmarker-width: 9;\r\n\t\tmarker-fill: #114D5A;\r\n\t\tmarker-line-color: #FFFFFF;\r\n\t}\r\n`;\r\n\r\n\r\n// Initial boundaries set for panning, [Bottom LEFT CORNER, Top RIGHT CORNER] (longitude, latitude) OR (y,x)\r\n// [bottom right, top left] (long,lat)\r\nvar bounds = [[1.2462530584216953,103.17157000878907], [1.4573106102494986,104.02299579003907]]; \r\nvar boundsYE = [[1.4222007626498234, 103.82588446052979], [1.4297086221286615, 103.8580709687085]];\r\nvar boundsYW = [[1.4278298727354806, 103.82111191749574] , [1.4353377138167054, 103.85329842567445]]; \r\nvar boundsPunggol = [[1.410729, 103.8856], [1.418378, 103.902596]];\r\n\r\nclass MainMap extends React.Component {\r\n\r\n    state = {\r\n\t    center: [1.355075, 103.60494],\r\n\t\tzoom: 12,\r\n\t\tmaxBounds: bounds,\r\n\t\tmaxZoom: 18,\r\n\t\tminZoom: 12,\r\n\t\tmapRef: null,\r\n\t\tmarkerPosition: [1.316245, 103.805636],\r\n\t\tmarkerContent: \"hellohello\"\r\n\t}    \r\n\r\n\tcomponentDidMount() {\r\n\t\t// Make a reference to Leaflet Map object, which is in <Map ref=\"map\"/> below\r\n\t\tthis.setState({\r\n\t\t\tmapRef: this.refs.map.leafletElement\r\n        })\r\n        //console.log(\"in map componentDidMount: this.state.mapRef: \" + this.state.mapRef);\r\n\t}\r\n\r\n\t// handleReset = () => {\r\n\t// \tconsole.log(\"resetting\");\r\n\t// \t// if(this.state.hideBTO) {\r\n\t// \t// \tthis.setState({\r\n\t// \t// \t\thideBTO: false\r\n\t// \t// \t});\t\r\n\t// \t// }\r\n\t// \tthis.state.mapRef.flyToBounds(bounds);\r\n\t// }\r\n\r\n\thandlePan = (btoBounds) => {\r\n        //console.log(\"before flying to bounds, current bounds is: \" + this.state.mapRef.getBounds().toBBoxString());\r\n\t\tthis.state.mapRef.flyToBounds(btoBounds);\r\n\t}\r\n\r\n\thandleMarker = (position, content) => {\r\n\t\t// change the position of the marker, and the content within the popup\r\n\t\tthis.setState( {\r\n\t\t\tmarkerPosition: position,\r\n\t\t\tmarkerContent: content\r\n\t\t});\r\n\t}\r\n\r\n\t// not sure how props.shouldReset works\r\n\tshouldComponentUpdate() {\r\n\t\tif (this.props.shouldReset) {\r\n\t\t\t//console.log(\"shouldReset problem\");\r\n            this.handlePan(bounds);\r\n            this.props.resetClosure();\r\n\t\t\treturn true;\r\n\t\t} else if (this.props.shouldMoveToYishunEast) {\r\n\t\t\t//console.log(\"YE problem\");\r\n\t\t\tthis.handlePan(boundsYE);\r\n            this.props.moveToYishunEastClosure();\r\n            return true;\r\n        } else if (this.props.shouldMoveToYishunWest) {\r\n\t\t\t//console.log(\"YW problem\");\r\n\t\t\tthis.handlePan(boundsYW);\r\n            this.props.moveToYishunWestClosure();\r\n            return true;\r\n        } else if (this.props.shouldMoveToPunggol) {\r\n\t\t\t//console.log(\"punggol problem\");\r\n\t\t\tthis.handlePan(boundsPunggol);\r\n            this.props.moveToPunggolClosure();\r\n            return true;\r\n        } else {\r\n\t\t\t//console.log(\"else problem\");\r\n            return true;\r\n        }\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst { center, zoom, maxBounds, maxZoom, minZoom } = this.state;\r\n\r\n\t\treturn (\r\n\t\t<div>\r\n\t\t\t{/* Must have id=\"mapid\" */}\r\n\t\t\t<Map ref=\"map\" id=\"mapid\"\r\n\t\t\t\tcenter = {center}\r\n\t\t\t\tzoom = {zoom}\r\n\t\t\t\tanimate={true}\r\n\t\t\t\tmaxBounds={maxBounds}\r\n\t\t\t\tmaxZoom={maxZoom}\r\n\t\t\t\tminZoom={minZoom}\r\n\t\t\t\t>\r\n\t\t\t\t<Card cardTitle=\"<Insert title at cardTitle props in Card component>\"\r\n                      cardText=\"<Insert text at cardText props in Card component>\" \r\n\t\t\t\t\t  client={client}\r\n\t\t\t\t\t  mapRef={this.state.mapRef}\r\n\t\t\t\t\t  featureOnFocus={this.props.featureOnFocus}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<TileLayer \r\n\t\t\t\t\turl = {CARTO_BASEMAP} \r\n\t\t\t\t\t/>\r\n\t\t\t\t<Marker position = {this.state.markerPosition} draggable={true} id=\"marker\">\r\n        \t\t\t<Tooltip>\r\n\t\t\t\t\t\t  <h5> {this.state.markerContent}</h5>\r\n        \t\t\t\t</Tooltip>\r\n      \t\t\t\t</Marker> \r\n\t\t\t\t<BusLayer style={busStyle} \r\n\t\t\t\t\t\t  client={client} \r\n\t\t\t\t\t\t  hidden={this.props.busStopHidden} \r\n\t\t\t\t\t\t  handleMarker={this.handleMarker}\r\n\t\t\t\t\t\t  />\r\n\t\t\t\t<SchoolLayer style={schoolStyle} \r\n\t\t\t\t\t\t\t hidden={this.props.schoolHidden} \r\n\t\t\t\t\t\t\t client={client}\r\n\t\t\t\t\t\t\t handleMarker={this.handleMarker}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t<HawkerLayer mapRef={this.state.mapRef} \r\n\t\t\t\t\t\t\t style={hawkerStyle} \r\n\t\t\t\t\t\t\t hidden={this.props.hawkerHidden} \r\n\t\t\t\t\t\t\t client={client} \r\n\t\t\t\t\t\t\t handleMarker={this.handleMarker}\r\n\t\t\t\t\t\t\t />\r\n\t\t\t\t<BTOSectorLayer onClick={this.handlePan}\r\n\t\t\t\t\t\t\t\tstyle={BTOStyle}\r\n\t\t\t\t\t\t\t\tclient={client}\r\n\t\t\t\t\t\t\t\thidden={false}\r\n\t\t\t\t\t\t\t\thandleMarker={this.handleMarker}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t<Alert className=\"alert\" color=\"primary\"> \r\n\t\t\t\t\tAugust 2018 Sales Launch: Punggol, Yishun East and Yishun West\r\n\t\t\t\t\t</Alert> \r\n\r\n\t\t\t</Map>\r\n\t\t\t<div id=\"legend\">\r\n\t\t\t\t<b> Legend </b>\r\n\t\t\t\t<span className=\"btos\">\t</span>\r\n\t\t\t\tBTO\r\n\t\t\t\t<span className=\"schools\"> </span>\r\n\t\t\t\tSchools\r\n\t\t\t\t<span className=\"hawkers\"> </span>\r\n\t\t\t\tHawker Centers\r\n\t\t\t\t<span className=\"busstops\"> </span>\r\n\t\t\t\tBus Stops\r\n\t\t\t</div>\t\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MainMap;","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup } from 'reactstrap';\r\nimport './CheckBoxes.css';\r\n\r\nclass CheckBoxes extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    \r\n    this.state = { \r\n        cSelected: [],\r\n    };\r\n\r\n    this.onCheckboxBtnClick = this.onCheckboxBtnClick.bind(this);\r\n  }\r\n\r\n  onCheckboxBtnClick(selected) {\r\n    const index = this.state.cSelected.indexOf(selected);\r\n    if (index < 0) {\r\n      this.state.cSelected.push(selected);\r\n    } else {\r\n      this.state.cSelected.splice(index, 1);\r\n    }\r\n    this.setState({ cSelected: [...this.state.cSelected] });\r\n\r\n    switch(selected) {\r\n      case 1:   \r\n          this.props.toggleHawkerHidden();\r\n          break;\r\n      case 2:\r\n          this.props.toggleBusHidden();\r\n          break;\r\n      case 3:\r\n          this.props.toggleSchoolHidden();\r\n          break;\r\n      default: \r\n          break;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <span className=\"checkboxes\">\r\n        <ButtonGroup size=\"medium\">\r\n          <Button color=\"info\" onClick={() => this.onCheckboxBtnClick(1)} active={this.state.cSelected.includes(1)}>Hawker Centers</Button>\r\n          <Button color=\"info\" onClick={() => this.onCheckboxBtnClick(2)} active={this.state.cSelected.includes(2)}>Bus Stops</Button>\r\n          <Button color=\"info\" onClick={() => this.onCheckboxBtnClick(3)} active={this.state.cSelected.includes(3)}>Schools</Button>\r\n        </ButtonGroup>\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckBoxes;","import React, { Component } from 'react';\r\nimport HDB_prices from './data/new_HDB_prices_3room.json';\r\nimport './TimeSeries_3room.css';\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label} from 'recharts';\r\n\r\n//generate random colour \r\nvar randomColor = require('randomcolor');\r\n\r\n// var color = ['#F1948A', '#C39BD3', '#AED6F1', '#A3E4D7', '#F9E79F', '#DC7633']\r\n// var counter = -1;\r\n\r\n\r\nclass TimeSeries_3room extends Component {\r\n   // LineChart = require(\"react-chartjs\").Line;\r\n\r\n    render(){\r\n        return (\r\n        <LineChart width = {770} height = {230} \r\n        margin={{top: 30, right: 30, left: 20, bottom: 5}}>>\r\n                \r\n                <XAxis dataKey = \"financial_year\" type = \"category\" allowDuplicatedCategory={false} />\r\n                <YAxis domain = {['dataMin', 'dataMax']} label = {{value: 'Cost of BTO ($)', position: 'left', angle: -90, offset: 10}}/>\r\n                <Tooltip/>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <Legend verticalAlign = \"bottom\"/>\r\n                {HDB_prices.map(s => (\r\n                    <Line dataKey = \"max_selling_price\" data = {s.data} name = {s.name} key = {s.financial_year} stroke = {randomColor()}/>\r\n                    ))}\r\n\r\n                <Label value = \"3-Room BTO Time Series\" position = \"top\"/>\r\n\r\n            </LineChart>\r\n            );\r\n    }\r\n}\r\n\r\nexport default TimeSeries_3room;","import React, { Component } from 'react';\r\nimport HDB_prices from './data/new_HDB_prices_4room.json';\r\nimport './TimeSeries_4room.css';\r\nimport {LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, Label} from 'recharts';\r\n\r\n//generate random colour \r\nvar randomColor = require('randomcolor');\r\n\r\n// var color = ['#F1948A', '#C39BD3', '#AED6F1', '#A3E4D7', '#F9E79F', '#DC7633']\r\n// var counter = -1;\r\n\r\nclass TimeSeries_4room extends Component {\r\n   // LineChart = require(\"react-chartjs\").Line;\r\n\r\n    render(){\r\n        return (\r\n        <LineChart width = {770} height = {230} \r\n        margin={{top: 30, right: 30, left: 20, bottom: 5}}>>\r\n                \r\n                <XAxis dataKey = \"financial_year\" type = \"category\" allowDuplicatedCategory={false} />\r\n                <YAxis domain = {['dataMin', 'dataMax']} label = {{value: 'Cost of BTO ($)', position: 'left', angle: -90, offset: 10}}/>\r\n                <Tooltip/>\r\n                <CartesianGrid strokeDasharray=\"3 3\"/>\r\n                <Legend verticalAlign = \"bottom\"/>\r\n                {HDB_prices.map(s => (\r\n                    <Line dataKey = \"max_selling_price\" data = {s.data} name = {s.name} key = {s.financial_year} stroke = {randomColor()}/>\r\n                    ))}\r\n\r\n                <Label value = \"3-Room BTO Time Series\" position = \"top\"/>\r\n\r\n            </LineChart>\r\n            );\r\n    }\r\n}\r\n\r\nexport default TimeSeries_4room;","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport TimeSeries3 from '../TimeSeries/TimeSeries_3room';\r\nimport TimeSeries4 from '../TimeSeries/TimeSeries_4room';\r\n\r\nclass ModalGraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: false\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"modalgraph\">\r\n        <Button color=\"success\" onClick={this.toggle}>{this.props.buttonLabel}</Button>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className} zIndex={10000} size={\"lg\"}>\r\n          <ModalHeader toggle={this.toggle}> Prices of BTOs in different estates during 2008-2016  </ModalHeader>\r\n          <ModalBody>\r\n            <h5> 3-Room BTO Flats </h5>\r\n            <TimeSeries3/>\r\n            <h5> 4-Room BTO Flats </h5>\r\n            <TimeSeries4/>\r\n            </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={this.toggle}>Dismiss</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalGraph;","import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Button\r\n } from 'reactstrap';\r\nimport CheckBoxes from '../NavCol/CheckBoxes/CheckBoxes';\r\nimport ModalGraph from '../Modals/ModalGraph';\r\n\r\nexport default class NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false,\r\n      isStart: true\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"Bar\">\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n          <NavbarBrand href=\"/\">BTOViewer</NavbarBrand>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem>\r\n                <CheckBoxes toggleBusHidden={this.props.toggleBusHidden}\r\n                            toggleSchoolHidden={this.props.toggleSchoolHidden}\r\n                            toggleHawkerHidden={this.props.toggleHawkerHidden}\r\n                  />\r\n              </NavItem>\r\n\r\n              <NavItem> \r\n                <ModalGraph buttonLabel=\"Graphs\"/>\r\n                </NavItem>\r\n              <NavItem> \r\n                <Button color=\"primary\" onClick={this.props.moveToPunggol}> Punggol BTOs </Button>\r\n                </NavItem>\r\n              <NavItem> \r\n                <Button color=\"primary\" onClick={this.props.moveToYishunWest}> Yishun West BTOs </Button>\r\n                </NavItem>\r\n              <NavItem> \r\n                  <Button color=\"primary\" onClick={this.props.moveToYishunEast}> Yishun East BTOs </Button>\r\n                </NavItem>\r\n              <NavItem> \r\n                  <Button color=\"danger\" onClick={this.props.onClick}> Reset </Button>\r\n                </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\r\n\r\nexport default class Example extends React.Component {\r\n  render() {\r\n    return (\r\n      <ListGroup>\r\n        <ListGroupItem color=\"info\"> \r\n            <li>Click any of the <Button color=\"info\">Filters </Button> to toggle and filter out the features you are looking out for!</li>\r\n         </ListGroupItem>\r\n         <ListGroupItem color=\"info\">\r\n            <li> Click on <Button color=\"primary\"> BTO Launches </Button> to view the its nearby amenities! </li>\r\n            </ListGroupItem>\r\n        <ListGroupItem color=\"info\">\r\n            <li> Click on <Button color=\"success\"> Graphs </Button> to view the the BTO price trends in recent years!  </li>\r\n            </ListGroupItem> \r\n         <ListGroupItem color=\"info\">\r\n            <li> Click on <Button color=\"danger\"> Reset </Button> to zoom out! </li>\r\n            </ListGroupItem>  \r\n      </ListGroup>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport List from './List/List';\r\n\r\nclass ModalExample extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      modal: true\r\n    };\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      modal: !this.state.modal\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Modal isOpen={this.state.modal} toggle={this.toggle} className={this.props.className} zIndex={10000}>\r\n          <ModalHeader toggle={this.toggle}> Welcome to  BTOViewer! </ModalHeader>\r\n          <ModalBody>\r\n            <List/>\r\n            </ModalBody>\r\n          <ModalFooter>\r\n            <Button color=\"secondary\" onClick={this.toggle}>Dismiss</Button>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ModalExample;","import React, { Component } from 'react';\nimport './App.css';\nimport Map from './components/Map/MapAgain';\nimport NavBar from './components/NavBar/NavBar';\nimport ModalOnStart from './components/Modals/ModalOnStart';\n\n// Initial boundaries set for panning, [LEFT CORNER, RIGHT CORNER] (longitude, latitude) OR (y,x) \n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shouldReset: false,\n      busStopHidden: false,\n      btoHidden: false,\n      schoolHidden: false,\n      hawkerHidden: false,\n      shoppingHidden: false,\n      featureOnFocus: null,\n      shouldMoveToYishunEast: false,\n      shouldMoveToYishunWest: false,\n      shouldMoveToPunggol: false\n    };\n  }\n\n  // EAST\n  moveToYishunEastHandler = () => {\n    //console.log(\"will move to Yishun East\");\n    this.setState({\n      shouldMoveToYishunEast: true,\n      featureOnFocus: \"Yishun East\"\n    });\n  }\n\n  moveToYishunEastClosure = () =>　{\n    //console.log(\"closure for yishun east\");\n    this.setState({\n      shouldMoveToYishunEast: false\n    })\n  }\n\n  // WEST\n  moveToYishunWestHandler = () => {\n    //console.log(\"will move to Yishun West\");\n    this.setState({\n      shouldMoveToYishunWest: true,\n      featureOnFocus: \"Yishun West\"\n    });\n  }\n\n  moveToYishunWestClosure = () =>　{\n    //console.log(\"closure for yishun west\");\n    this.setState({\n      shouldMoveToYishunWest: false\n    })\n  }\n\n  moveToPunggolHandler = () => {\n    //console.log(\"will move to Punggol\");\n    this.setState({\n      shouldMoveToPunggol: true,\n      featureOnFocus: \"Punggol\"\n    });\n  }\n\n  moveToPunggolClosure = () =>　{\n    //console.log(\"closure for Punggol\");\n    this.setState({\n      shouldMoveToPunggol: false\n    })\n  }\n\n  resetHandler = () => {\n    //console.log(\"in resetHandler\");\n    this.setState( {\n      shouldReset: true,\n      featureOnFocus: null\n    })\n  }\n\n  resetClosure = () => {\n    //console.log(\"in resetClosure\");\n    this.setState( {\n      shouldReset: false\n    })\n  }\n\n  toggleHawkerHidden = () => {\n    this.setState({\n      hawkerHidden: !this.state.hawkerHidden \n    });\n  }\n  \n  toggleBusStopHidden = () => {\n    this.setState({\n      busStopHidden: !this.state.busStopHidden \n    });\n  }\n\n  toggleSchoolHidden = () => {\n    this.setState({\n      schoolHidden: !this.state.schoolHidden \n    });\n  }\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"content-fixed\">\n          <NavBar onClick={this.resetHandler} \n                  moveToYishunWest={this.moveToYishunWestHandler}\n                  moveToYishunEast={this.moveToYishunEastHandler}\n                  moveToPunggol={this.moveToPunggolHandler}\n                  toggleHawkerHidden={this.toggleHawkerHidden} \n                  toggleBusHidden={this.toggleBusStopHidden} \n                  toggleSchoolHidden={this.toggleSchoolHidden}\n                  />\n        </div>\n        \n        <div className=\"content-r\"> \n            <Map shouldMoveToPunggol={this.state.shouldMoveToPunggol}\n                 moveToPunggolClosure={this.moveToPunggolClosure}\n                 shouldMoveToYishunWest={this.state.shouldMoveToYishunWest}\n                 moveToYishunWestClosure={this.moveToYishunWestClosure}\n                 shouldMoveToYishunEast={this.state.shouldMoveToYishunEast}\n                 moveToYishunEastClosure={this.moveToYishunEastClosure}\n                 shouldReset={this.state.shouldReset} \n                 resetClosure={this.resetClosure}\n                 hawkerHidden={this.state.hawkerHidden}\n                 busStopHidden={this.state.busStopHidden}\n                 schoolHidden={this.state.schoolHidden}\n                 featureOnFocus={this.state.featureOnFocus}\n                 />\n        </div>\n          <ModalOnStart/>\n        </div>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}